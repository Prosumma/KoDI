/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.5.0"

    // Apply the java-library plugin for API and implementation separation.
    `java-library`

    id("maven-publish")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:30.1.1-jre")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")
}

// Library Publishing
val sourcesJar by tasks.creating(Jar::class) {
    from(sourceSets["main"].java.srcDirs)
    archiveClassifier.set("sources")
}

/*
val doc by tasks.creating(Javadoc::class) {
    source = sourceSets["main"].allSource
}

val javadocJar by tasks.creating(Jar::class) {
    dependsOn(doc)
    from(doc)
    archiveClassifier.set("javadoc")
}
 */

artifacts {
//    archives(tasks.getByName("javadocJar"))
    archives(tasks.getByName("sourcesJar"))
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/prosumma/KoDI")
            credentials {
                username = System.getenv("GITHUB_USER")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        create<MavenPublication>("main") {
            groupId = project.group.toString()
            artifactId = "KoDI"
            version = "0.1.0"
            artifact(sourcesJar)
//            artifact(javadocJar)
//            artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
            pom.withXml {
                val dependencies = asNode().appendNode("dependencies")
                configurations.getByName("implementation").dependencies.forEach {
                    if (it.group != null &&
                        it.name != "unspecified" &&
                        it.version != null
                    ) {
                        val dependencyNode = dependencies.appendNode("dependency")
                        dependencyNode.appendNode("groupId", it.group)
                        dependencyNode.appendNode("artifactId", it.name)
                        dependencyNode.appendNode("version", it.version)
                    }
                }
            }
        }
    }
}
